


'''
Rotational Cipher
One simple way to encrypt a string is to "rotate" every alphanumeric character by a certain amount. Rotating a character means replacing it with another character that is a certain number of steps away in normal alphabetic or numerical order.
For example, if the string "Zebra-493?" is rotated 3 places, the resulting string is "Cheud-726?". Every alphabetic character is replaced with the character 3 letters higher (wrapping around from Z to A), and every numeric character replaced with the character 3 digits higher (wrapping around from 9 to 0). Note that the non-alphanumeric characters remain unchanged.
Given a string and a rotation factor, return an encrypted string.
Signature
string rotationalCipher(string input, int rotationFactor)
Input
1 <= |input| <= 1,000,000
0 <= rotationFactor <= 1,000,000
Output
Return the result of rotating input a number of times equal to rotationFactor.
Example 1
input = Zebra-493?
rotationFactor = 3
output = Cheud-726?
Example 2
input = abcdefghijklmNOPQRSTUVWXYZ0123456789
rotationFactor = 39
output = nopqrstuvwxyzABCDEFGHIJKLM9012345678
'''
########################################################################################################################################################################################################################################################################################################################################################################################################################################################################################################################################################################################################################################################################################################################################################################################################################################################################################################################################################




import math
# Add any extra import statements you may need here


# Add any helper functions you may need here


def rotationalCipher(input_str, rotation_factor):
  # Write your code here
  lwr_case_eng_letters = [chr(i) for i in range(ord('a'), (ord('z') + 1))]
  uppr_case_eng_letters = [chr(i) for i in range(ord('A'), (ord('Z') + 1))]
  numeric_letters = [chr(i) for i in range(ord('0'), (ord('9') + 1))]
  n  = len(input_str)
  rotated_str = [input_str[i] for i in range(n)]
  character_alphabet_size = 26
  numeric_alphabet_size = 10
  for i in range(n):
    if (input_str[i] in uppr_case_eng_letters): 
      indx = uppr_case_eng_letters.index(input_str[i])
      indx = (indx + ((rotation_factor) % 26)) % 26      
      rotated_str[i] = uppr_case_eng_letters[indx]
    if (input_str[i] in lwr_case_eng_letters):    
      indx = lwr_case_eng_letters.index(input_str[i])
      indx = (indx + ((rotation_factor) % 26)) % 26      
      rotated_str[i] = lwr_case_eng_letters[indx]
    elif input_str[i] in numeric_letters:
      indx = numeric_letters.index(input_str[i])
      indx = (indx + ((rotation_factor) % 10)) % 10     
      rotated_str[i] = numeric_letters[indx]
      
  return "".join(rotated_str)











# These are the tests we use to determine if the solution is correct.
# You can add your own at the bottom.

def printString(string):
  print('[\"', string, '\"]', sep='', end='')

test_case_number = 1

def check(expected, output):
  global test_case_number
  result = False
  if expected == output:
    result = True
  rightTick = '\u2713'
  wrongTick = '\u2717'
  if result:
    print(rightTick, 'Test #', test_case_number, sep='')
  else:
    print(wrongTick, 'Test #', test_case_number, ': Expected ', sep='', end='')
    printString(expected)
    print(' Your output: ', end='')
    printString(output)
    print()
  test_case_number += 1

if __name__ == "__main__":
  input_1 = "All-convoYs-9-be:Alert1."
  rotation_factor_1 = 4
  expected_1 = "Epp-gsrzsCw-3-fi:Epivx5."
  output_1 = rotationalCipher(input_1, rotation_factor_1)
  check(expected_1, output_1)

  input_2 = "abcdZXYzxy-999.@"
  rotation_factor_2 = 200
  expected_2 = "stuvRPQrpq-999.@"
  output_2 = rotationalCipher(input_2, rotation_factor_2)
  check(expected_2, output_2)

  # Add your own test cases here
  input_2 = "123450"
  rotation_factor_2 = 1
  expected_2 = "234561"
  output_2 = rotationalCipher(input_2, rotation_factor_2)
  check(expected_2, output_2)

  input_2 = "1"
  rotation_factor_2 = 9
  expected_2 = "0"
  output_2 = rotationalCipher(input_2, rotation_factor_2)
  check(expected_2, output_2)
