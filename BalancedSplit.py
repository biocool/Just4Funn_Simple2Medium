

########################################################################################################################################################################################################################################################################################################################################################################################################################################################################################################################################################################################################################################################################################################################################################################################################################################################################################################################################################
'''
Balanced Split
Given an array of integers (which may include repeated integers), determine if there's a way to split the array into two subsequences A and B such that the sum of the integers in both arrays is the same, and all of the integers in A are strictly smaller than all of the integers in B.
Note: Strictly smaller denotes that every integer in A must be less than, and not equal to, every integer in B.
Signature
bool balancedSplitExists(int[] arr)
Input
All integers in array are in the range [0, 1,000,000,000].
Output
Return true if such a split is possible, and false otherwise.
Example 1
arr = [1, 5, 7, 1]
output = true
We can split the array into A = [1, 1, 5] and B = [7].
Example 2
arr = [12, 7, 6, 7, 6]
output = false
We can't split the array into A = [6, 6, 7] and B = [7, 12] since this doesn't satisfy the requirement that all integers in A are smaller than all integers in B.
'''
########################################################################################################################################################################################################################################################################################################################################################################################################################################################################################################################################################################################################################################################################################################################################################################################################################################################################################################################################################





import math
# Add any extra import statements you may need here


# Add any helper functions you may need here
def array_sum(arr):
  n = len(arr)
  s = 0
  for i in range(n):
    s += arr[i]
  return s
    

def caculateAllSubarraySum(arr):
  n = len(arr)
  allSubarraySumMatrix = [[0 for i in range(n)]for i in range(n)]  
  for i in range(n):
    for j in range(i,n,1):
      allSubarraySumMatrix[i][j] = array_sum(arr[i:j+1])
  return allSubarraySumMatrix
      
  # Write your code here

def balancedSplitExists(arr):
  # Write your code here
  allSubarraySumMatrix = caculateAllSubarraySum(arr)
  n = len(arr)
  for i in range(n):
    for j in range(i,n,1):
      if i == 0:
        left_sum = 0
        left_subarray = [0]
      else:
        left_subarray = arr[0 : i]
        left_sum = allSubarraySumMatrix[0][i-1]
      if j == (n-1):
        right_sum = 0
        right_subarray = [0]
      else:
        right_subarray = arr[j + 1 : n]
        right_sum = allSubarraySumMatrix[j+1][n -1]      
      if allSubarraySumMatrix[i][j] == (left_sum + right_sum):
        sub_arr1_max = max(arr[i:j+1])
        sub_arr1_min = min(arr[i:j+1])        
        sub_arr2_max = max(max(left_subarray),max(right_subarray))
        sub_arr2_min = min(min(left_subarray),min(right_subarray))
        if (sub_arr1_max < sub_arr2_min) or (sub_arr2_max < sub_arr1_min):
          return 1
  return 0
        


# These are the tests we use to determine if the solution is correct.
# You can add your own at the bottom.

def printString(string):
  print('[\"', string, '\"]', sep='', end='')

test_case_number = 1

def check(expected, output):
  global test_case_number
  result = False
  if expected == output:
    result = True
  rightTick = '\u2713'
  wrongTick = '\u2717'
  if result:
    print(rightTick, 'Test #', test_case_number, sep='')
  else:
    print(wrongTick, 'Test #', test_case_number, ': Expected ', sep='', end='')
    printString(expected)
    print(' Your output: ', end='')
    printString(output)
    print()
  test_case_number += 1

if __name__ == "__main__":
  arr_1 = [2, 1, 2, 5]
  expected_1 = True
  output_1 = balancedSplitExists(arr_1)
  check(expected_1, output_1)

  arr_2 = [3, 6, 3, 4, 4]
  expected_2 = False
  output_2 = balancedSplitExists(arr_2)
  check(expected_2, output_2)

  # Add your own test cases here
  
